# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  BUILD_TYPE: Debug

permissions:
  contents: write   # This is required to create/push the new git tag

jobs:
  build-linux:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v2
      - name: Install build dependencies
        run: sudo apt update -y && sudo apt install -y clang-format clang-tidy g++ cmake libboost-all-dev ninja-build

#      - name: Coding Style checks
#        run: ${{github.workspace}}/format.sh check

#      - name: Run static analysis
#        run: ./static-analysis.sh -p ${{github.workspace}}/build

      - name: Build
        # Tests are included in cmake.
        shell: bash
        run: |
          chmod -R +x ./src/scripts 
          ./src/scripts/deploy.sh --build-number=${{ github.run_number }} --ninja

      - name: Create release artifacts
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/helloworld-uvarenkov-1.119.${{ github.run_number }}.deb
          asset_name: helloworld-uvarenkov-1.119.${{ github.run_number }}.deb
          asset_content_type: application/vnd.debian.binary-package


